/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/apps/all_ids': {
    get: operations['all_ids']
  }
  '/apps/recently_added': {
    get: operations['recently_added']
  }
  '/apps/recently_updated': {
    get: operations['recently_updated']
  }
  '/dashboard/apps': {
    get: operations['get_apps']
    post: operations['add_app']
  }
  '/dashboard/stripe_account': {
    get: operations['get_stripe_account']
  }
  '/dashboard/submit_app_update': {
    post: operations['submit']
  }
  '/users/test_auth': {
    get: operations['test_auth']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    App: {
      first_seen?: components['schemas']['time.OffsetDateTime'] | null
      id: string
      is_published: boolean
      is_verified: boolean
      last_submitted_version?: string | null
      last_update?: components['schemas']['time.OffsetDateTime'] | null
      repository: string
      stripe_connect_id?: string | null
    }
    AppUpdateSubmission: {
      /** @example com.github.davidmhewitt.torrential */
      app_id: string
      /** @example 3.0.0 */
      version_tag: string
    }
    ComponentSummary: {
      icons: components['schemas']['Icon'][]
      /** @example com.github.davidmhewitt.torrential */
      id: string
      name: components['schemas']['TranslatableString']
      summary?: components['schemas']['TranslatableString'] | null
    }
    CreateApp: {
      /** @example com.github.davidmhewitt.torrential */
      app_id: string
      /** @example https://github.com/davidmhewitt/torrential.git */
      repository: string
    }
    ErrorResponse: {
      error: string
      translation_key: components['schemas']['ErrorTranslationKey']
    }
    /** @enum {string} */
    ErrorTranslationKey:
      | 'generic.problem'
      | 'confirmation.generic-problem'
      | 'confirmation.token-used'
      | 'registration.generic-problem'
      | 'registration.user-already-exists'
      | 'registration.no-email-permission'
      | 'login.username-password-mismatch'
      | 'login.user-nonexistent'
      | 'logout.generic-problem'
      | 'add-app.generic-problem'
      | 'add-app.non-matching-github-rdnn'
      | 'add-app.invalid-repository-url'
      | 'submit-app-update.unable-to-get-url'
      | 'stripe-link.no-account'
      | 'generic.app-not-found'
    Icon: {
      /**
       * Format: int32
       * @example 64
       */
      height?: number | null
      /** @example com.github.alexkdeveloper.bmi.png */
      path: string
      /**
       * Format: int32
       * @example 64
       */
      width?: number | null
    }
    StripeAccount: {
      /** @example acct_1NCliJPBGjCwUDHc */
      account_id: string
      /** @example true */
      charges_enabled: boolean
    }
    /**
     * @example {
     *   "C": "Welcome",
     *   "ja": "いらっしゃいませ"
     * }
     */
    TranslatableString: {
      [key: string]: string | undefined
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  all_ids: {
    responses: {
      /** @description List of all applications ids */
      200: {
        content: {
          'application/json': string[]
        }
      }
    }
  }
  recently_added: {
    responses: {
      /** @description List of recently added applications */
      200: {
        content: {
          'application/json': components['schemas']['ComponentSummary'][]
        }
      }
    }
  }
  recently_updated: {
    responses: {
      /** @description List of recently updated applications */
      200: {
        content: {
          'application/json': components['schemas']['ComponentSummary'][]
        }
      }
    }
  }
  get_apps: {
    responses: {
      /** @description A list of apps owned by the current user */
      200: {
        content: {
          'application/json': components['schemas']['App'][]
        }
      }
    }
  }
  add_app: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateApp']
      }
    }
    responses: {
      /** @description App successfully added */
      200: never
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Server error while adding app */
      500: never
    }
  }
  get_stripe_account: {
    responses: {
      /** @description Stripe account details */
      200: {
        content: {
          'application/json': components['schemas']['StripeAccount']
        }
      }
    }
  }
  submit: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AppUpdateSubmission']
      }
    }
    responses: {
      /** @description App update submitted for processing */
      200: never
      /** @description Error occurred while submitting app for processing */
      500: never
    }
  }
  test_auth: {
    responses: {
      /** @description User is authenticated */
      200: never
      /** @description User is not authenticated */
      403: never
    }
  }
}
