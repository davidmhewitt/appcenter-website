version: "3.9"

services:
  backend:
    build: backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      APP_DATABASE__USERNAME: postgres
      APP_DATABASE__PASSWORD: "${POSTGRES_PASSWORD}"
      APP_DATABASE__HOST: postgres
      APP_REDIS__URI: redis://redis
      APP_SECRET__SECRET_KEY: "${APP_SECRET_KEY}"
      APP_SECRET__HMAC_SECRET: "${APP_HMAC_SECRET}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/api/health_check"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: frontend
    restart: always
    depends_on:
      - backend

  redis:
    image: "redis:7.0"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    image: "postgres:15.3"
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: appcenter_website
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
