version: "3.9"

services:
  backend:
    image: "ghcr.io/davidmhewitt/appcenter-website/backend:latest"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      APP_DATABASE__URL: "postgresql://postgres:${PG_PASSWORD}@postgres/appcenter_website"
      APP_REDIS__URI: redis://redis
      APP_SECRET__SECRET_KEY: "${APP_SECRET__SECRET_KEY}"
      APP_SECRET__HMAC_SECRET: "${APP_SECRET__HMAC_SECRET}"
      APP_GITHUB__CLIENT_ID: "${APP_GITHUB__CLIENT_ID}"
      APP_GITHUB__CLIENT_SECRET: "${APP_GITHUB__CLIENT_SECRET}"
      APP_GITHUB__USERNAME: "${APP_GITHUB__USERNAME}"
      APP_GITHUB__ACCESS_TOKEN: "${APP_GITHUB__ACCESS_TOKEN}"
      APP_GITHUB__REVIEWS_URL: "${APP_GITHUB__REVIEWS_URL}"
      APP_STRIPE__SECRET_KEY: "${APP_STRIPE__SECRET_KEY}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health-check"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HTTP_HOST}`) && ( PathPrefix(`/api`) || PathPrefix(`/static/apps`) )"
      - "traefik.http.routers.backend.tls=true"
    volumes:
      - backend_appdata:/app/_apps

  frontend:
    image: "ghcr.io/davidmhewitt/appcenter-website/frontend:latest"
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_BASE_URL: "${NEXT_PUBLIC_API_BASE_URL}"
      SERVER_SIDE_API_URL: "${SERVER_SIDE_API_URL}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${HTTP_HOST}`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.tls=true"

  redis:
    image: "redis:7.0"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - redisdata:/data

  postgres:
    image: "postgres:15.3"
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      POSTGRES_DB: appcenter_website
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs-traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml"
      - "./certs/:/etc/certs"

volumes:
  backend_appdata:
  pgdata:
  redisdata:
