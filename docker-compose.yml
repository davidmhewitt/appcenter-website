version: "3.9"

services:
  backend:
    build: backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      APP_DATABASE__URL: "postgresql://postgres:${PG_PASSWORD}@postgres/appcenter_website"
      APP_REDIS__URI: redis://redis
      APP_SECRET__SECRET_KEY: "${APP_SECRET__SECRET_KEY}"
      APP_SECRET__HMAC_SECRET: "${APP_SECRET__HMAC_SECRET}"
      APP_GITHUB__CLIENT_ID: "${APP_GITHUB__CLIENT_ID}"
      APP_GITHUB__CLIENT_SECRET: "${APP_GITHUB__CLIENT_SECRET}"
      APP_GITHUB__USERNAME: "${APP_GITHUB__USERNAME}"
      APP_GITHUB__ACCESS_TOKEN: "${APP_GITHUB__ACCESS_TOKEN}"
      APP_GITHUB__REVIEWS_URL: "${APP_GITHUB__REVIEWS_URL}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health-check"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`frontend.localhost`) && ( PathPrefix(`/api`) || PathPrefix(`/static/apps`) )"
      - "traefik.http.routers.backend.entrypoints=web"

  frontend:
    build: frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"

  redis:
    image: "redis:7.0"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    image: "postgres:15.3"
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      POSTGRES_DB: appcenter_website
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
